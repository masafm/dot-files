#!/usr/bin/env zsh
if [[ $(uname) != Darwin ]];then
    export AWS_VAULT_BACKEND=pass
    export GPG_TTY=$(tty)
    export XAUTHORITY=$HOME/.Xauthority
    [[ -d ~/sdk ]] && for d in ~/sdk/go*;do export GOROOT=$d;done
    export PATH=${GOROOT}/bin:$PATH
fi

if [[ -n ${HOMEBREW_PREFIX} && -x ${HOMEBREW_PREFIX}/bin/go ]]; then
    POWERLINE_PATH=${HOMEBREW_PREFIX}
else
    POWERLINE_PATH=/opt/powerline-go
    export PATH=$POWERLINE_PATH/bin:$PATH
fi

[[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]] && source /usr/share/doc/fzf/examples/key-bindings.zsh
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
[[ $commands[dircolors] && -f ~/.colorrc ]] && eval `dircolors ~/.colorrc`
[[ $commands[pyenv] ]] && eval "$(pyenv init --path)" && eval "$(pyenv init -)"
[[ $commands[kubectl] ]] && source <(kubectl completion zsh)
[[ $commands[microk8s.kubectl] ]] && source <(sudo microk8s.kubectl completion zsh | sed "s/kubectl/microk8s.kubectl/g")
[[ $commands[aws_completer] ]] && complete -C aws_completer aws
[[ -d ${HOMEBREW_PREFIX}/opt/openjdk/bin ]] && export PATH="${HOMEBREW_PREFIX}/opt/openjdk/bin:$PATH"
[[ -f ${HOMEBREW_PREFIX}/bin/nodebrew ]] && export PATH=$HOME/.nodebrew/current/bin:$PATH
[[ -f ${HOMEBREW_PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source ${HOMEBREW_PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh
[[ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
[[ -f ${HOMEBREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source ${HOMEBREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[[ -f ${HOMEBREW_PREFIX}/share/zsh-abbr/zsh-abbr.zsh ]] && source ${HOMEBREW_PREFIX}/share/zsh-abbr/zsh-abbr.zsh && abbr import-aliases --force --quiet

# Google Cloud SDK
[[ -f ~/google-cloud-sdk/path.zsh.inc ]] && source ~/google-cloud-sdk/path.zsh.inc
# gcloud command completion
[[ -f ~/google-cloud-sdk/completion.zsh.inc ]] && source ~/google-cloud-sdk/completion.zsh.inc

# Powerline
if [[ $(uname) != Darwin || -n $SSH_CONNECTION ]];then
    MODULES="host,"
    if [[ ! $USER =~ ^(mkashi|ubuntu|ec2-user|azureuser)+$ ]];then
	MODULES="user,${MODULES}"
    fi
fi
PATH_ALIASES=(
    '~/downloads/=~d'
    '~/Downloads/=~d'
)
[[ -d ~/src ]] && for d in $(find ~/src -maxdepth 1 -mindepth 1 -type d);do
    PATH_ALIASES+='~/src/'$(basename $d)'/=~s:'$(basename $d)
done
function powerline_precmd() {
    PS1="$($POWERLINE_PATH/bin/powerline-go -error $? -jobs ${${(%):%j}:-0} -colorize-hostname -modules ${MODULES}cwd,venv,perms,aws,jobs,exit,terraform-workspace,docker,git,goenv -path-aliases ${(pj:,:)PATH_ALIASES})"
}
function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [[ "$s" = "powerline_precmd" ]]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}
if [[ "$TERM" != "linux" && -f "$POWERLINE_PATH/bin/powerline-go" ]]; then
    install_powerline_precmd
fi
